/*

 */
// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1 "k8s.io/custom-database/pkg/apis/cusotmdatabase/v1"
)

// CustomDatabaseLister helps list CustomDatabases.
// All objects returned here must be treated as read-only.
type CustomDatabaseLister interface {
	// List lists all CustomDatabases in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.CustomDatabase, err error)
	// CustomDatabases returns an object that can list and get CustomDatabases.
	CustomDatabases(namespace string) CustomDatabaseNamespaceLister
	CustomDatabaseListerExpansion
}

// customDatabaseLister implements the CustomDatabaseLister interface.
type customDatabaseLister struct {
	indexer cache.Indexer
}

// NewCustomDatabaseLister returns a new CustomDatabaseLister.
func NewCustomDatabaseLister(indexer cache.Indexer) CustomDatabaseLister {
	return &customDatabaseLister{indexer: indexer}
}

// List lists all CustomDatabases in the indexer.
func (s *customDatabaseLister) List(selector labels.Selector) (ret []*v1.CustomDatabase, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.CustomDatabase))
	})
	return ret, err
}

// CustomDatabases returns an object that can list and get CustomDatabases.
func (s *customDatabaseLister) CustomDatabases(namespace string) CustomDatabaseNamespaceLister {
	return customDatabaseNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CustomDatabaseNamespaceLister helps list and get CustomDatabases.
// All objects returned here must be treated as read-only.
type CustomDatabaseNamespaceLister interface {
	// List lists all CustomDatabases in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.CustomDatabase, err error)
	// Get retrieves the CustomDatabase from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.CustomDatabase, error)
	CustomDatabaseNamespaceListerExpansion
}

// customDatabaseNamespaceLister implements the CustomDatabaseNamespaceLister
// interface.
type customDatabaseNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CustomDatabases in the indexer for a given namespace.
func (s customDatabaseNamespaceLister) List(selector labels.Selector) (ret []*v1.CustomDatabase, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.CustomDatabase))
	})
	return ret, err
}

// Get retrieves the CustomDatabase from the indexer for a given namespace and name.
func (s customDatabaseNamespaceLister) Get(name string) (*v1.CustomDatabase, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("customdatabase"), name)
	}
	return obj.(*v1.CustomDatabase), nil
}
